[
    {
        "id": "42553406.e0f604",
        "type": "http request",
        "z": "28bf6c0d.495c44",
        "name": "Query DAS",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 1000,
        "wires": [
            [
                "eb67a340.611238"
            ]
        ]
    },
    {
        "id": "eb67a340.611238",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "",
        "links": [
            "ae340d35.ea15c"
        ],
        "x": 735,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ae340d35.ea15c",
        "type": "link in",
        "z": "28bf6c0d.495c44",
        "name": "To DAS parser",
        "links": [
            "eb67a340.611238",
            "799954a3.2e0324",
            "836f5ce7.066718",
            "8acf6b01.1232"
        ],
        "x": 255,
        "y": 1160,
        "wires": [
            [
                "704638c.73f94c8"
            ]
        ]
    },
    {
        "id": "239ced43.202082",
        "type": "comment",
        "z": "28bf6c0d.495c44",
        "name": "_________________________      Device & Application Services      _________________________",
        "info": "",
        "x": 710,
        "y": 940,
        "wires": []
    },
    {
        "id": "ec4da66.81245d8",
        "type": "loracloud-utils-connectors-actility-in",
        "z": "28bf6c0d.495c44",
        "name": "",
        "port": "199",
        "x": 530,
        "y": 380,
        "wires": [
            [
                "dd87bc5c.819bd"
            ],
            [
                "22234073.4b00b8"
            ]
        ]
    },
    {
        "id": "27723b8e.5c0404",
        "type": "comment",
        "z": "28bf6c0d.495c44",
        "name": "_________________________      LNS Connexion      _________________________",
        "info": "",
        "x": 660,
        "y": 320,
        "wires": []
    },
    {
        "id": "d3b81ad0.67c19",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "",
        "links": [
            "a7a151f7.ab3b18",
            "223db848.b85b",
            "c350de83.3d1598"
        ],
        "x": 715,
        "y": 500,
        "wires": []
    },
    {
        "id": "7e6a41f5.b0b34",
        "type": "inject",
        "z": "28bf6c0d.495c44",
        "name": "DAS url",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 320,
        "y": 100,
        "wires": [
            [
                "4106001f.fd3178"
            ]
        ]
    },
    {
        "id": "4106001f.fd3178",
        "type": "function",
        "z": "28bf6c0d.495c44",
        "name": "DAS url",
        "func": "global.set('das_url', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "be5aee51.1dacc8",
        "type": "inject",
        "z": "28bf6c0d.495c44",
        "name": "DAS server token",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 350,
        "y": 60,
        "wires": [
            [
                "6ade3a6f.1025c4"
            ]
        ]
    },
    {
        "id": "6ade3a6f.1025c4",
        "type": "function",
        "z": "28bf6c0d.495c44",
        "name": "DAS server token",
        "func": "global.set('das_token', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d2f553d3.9ba84",
        "type": "comment",
        "z": "28bf6c0d.495c44",
        "name": "_________________________      CONFIG      _________________________",
        "info": "Demo AS code v1.2.0\n\n---\n\nv1.2.0\nAdd Downlink Generator block\nChange DAS API usage from /uplink/send to /device/send\n\nv1.1.0\nUse Wi-Fi DAS\n\nv1.0.1\nUpdate license\n\nv1.0.0\nInital release",
        "x": 640,
        "y": 20,
        "wires": []
    },
    {
        "id": "5cc19ea2.ed8168",
        "type": "comment",
        "z": "28bf6c0d.495c44",
        "name": "License",
        "info": "Revised BSD License\nCopyright Semtech Corporation 2020. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n* Neither the name of the Semtech corporation nor the\n  names of its contributors may be used to endorse or promote products\n  derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL SEMTECH S.A. BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "x": 1130,
        "y": 20,
        "wires": []
    },
    {
        "id": "304e9a15.89e07e",
        "type": "comment",
        "z": "28bf6c0d.495c44",
        "name": "_________________________      Application example      _________________________",
        "info": "",
        "x": 680,
        "y": 1580,
        "wires": []
    },
    {
        "id": "223db848.b85b",
        "type": "link in",
        "z": "28bf6c0d.495c44",
        "name": "To graph",
        "links": [
            "d3b81ad0.67c19",
            "4ffefb56.6cd57c",
            "dd87bc5c.819bd",
            "39ef899f.f3f1d6",
            "7e0c2420.0adbd4",
            "b014715b.09feb"
        ],
        "x": 255,
        "y": 1644,
        "wires": [
            [
                "f949d9fc.51f138"
            ]
        ]
    },
    {
        "id": "f949d9fc.51f138",
        "type": "function",
        "z": "28bf6c0d.495c44",
        "name": "If port=102, extract temperature",
        "func": "if (msg.uplink.port == 102) {\n    msg.payload = (new Buffer.from(msg.payload, 'hex'))[0];\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 1644,
        "wires": [
            [
                "a95ef73a.3694e"
            ]
        ]
    },
    {
        "id": "a95ef73a.3694e",
        "type": "ui_chart",
        "z": "28bf6c0d.495c44",
        "name": "Temperature widget",
        "group": "80204734.dbb678",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 700,
        "y": 1644,
        "wires": [
            []
        ]
    },
    {
        "id": "aee203c8.e9022",
        "type": "mqtt in",
        "z": "28bf6c0d.495c44",
        "name": "TTN v2 - Uplinks",
        "topic": "+/devices/+/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 320,
        "y": 520,
        "wires": [
            [
                "f4667960.6eae88"
            ]
        ]
    },
    {
        "id": "e79f15ed.86765",
        "type": "debug",
        "z": "28bf6c0d.495c44",
        "name": "DAS - Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 590,
        "y": 1240,
        "wires": []
    },
    {
        "id": "11ccb824.956248",
        "type": "debug",
        "z": "28bf6c0d.495c44",
        "name": "DAS - Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 590,
        "y": 1080,
        "wires": []
    },
    {
        "id": "247dd509.adc232",
        "type": "debug",
        "z": "28bf6c0d.495c44",
        "name": "DAS - Stream",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 600,
        "y": 1160,
        "wires": []
    },
    {
        "id": "433b882e.bfffb",
        "type": "debug",
        "z": "28bf6c0d.495c44",
        "name": "DAS - File",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 370,
        "y": 1704,
        "wires": []
    },
    {
        "id": "9847046e.a50778",
        "type": "mqtt out",
        "z": "28bf6c0d.495c44",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "",
        "x": 630,
        "y": 1460,
        "wires": []
    },
    {
        "id": "4d40fa4d.597964",
        "type": "mqtt in",
        "z": "28bf6c0d.495c44",
        "name": "Actility",
        "topic": "TPX/+/+/UL",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 290,
        "y": 380,
        "wires": [
            [
                "ec4da66.81245d8"
            ]
        ]
    },
    {
        "id": "dd87bc5c.819bd",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "",
        "links": [
            "a7a151f7.ab3b18",
            "223db848.b85b",
            "c350de83.3d1598"
        ],
        "x": 715,
        "y": 360,
        "wires": []
    },
    {
        "id": "a83c3f22.25713",
        "type": "inject",
        "z": "28bf6c0d.495c44",
        "name": "Get devices information from DAS",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 2040,
        "wires": [
            [
                "782a06f0.1db6e"
            ]
        ]
    },
    {
        "id": "782a06f0.1db6e",
        "type": "function",
        "z": "28bf6c0d.495c44",
        "name": "/api/v1/device/info",
        "func": "var api = 'api/v1/device/info';\nmsg.method = 'post';\n\nmsg.url = `${global.get('das_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('das_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 2040,
        "wires": [
            [
                "499f5fce.a1476"
            ]
        ]
    },
    {
        "id": "396cf013.6ef448",
        "type": "debug",
        "z": "28bf6c0d.495c44",
        "name": "device/info",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1150,
        "y": 2040,
        "wires": []
    },
    {
        "id": "499f5fce.a1476",
        "type": "http request",
        "z": "28bf6c0d.495c44",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 870,
        "y": 2040,
        "wires": [
            [
                "7a084b2.2374fb4"
            ]
        ]
    },
    {
        "id": "7a084b2.2374fb4",
        "type": "json",
        "z": "28bf6c0d.495c44",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 2040,
        "wires": [
            [
                "396cf013.6ef448"
            ]
        ]
    },
    {
        "id": "e2faea44.775968",
        "type": "comment",
        "z": "28bf6c0d.495c44",
        "name": "_________________________      Direct API calls      _________________________",
        "info": "",
        "x": 680,
        "y": 1980,
        "wires": []
    },
    {
        "id": "433356aa.26ae9",
        "type": "inject",
        "z": "28bf6c0d.495c44",
        "name": "Send reset request",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"RESET\",\"param\":3}]",
        "payloadType": "json",
        "x": 330,
        "y": 2100,
        "wires": [
            [
                "bfdfe728.ef41f"
            ]
        ]
    },
    {
        "id": "bfdfe728.ef41f",
        "type": "function",
        "z": "28bf6c0d.495c44",
        "name": "/api/v1/requests/set",
        "func": "var api = 'api/v1/requests/set';\nmsg.method = 'post';\n\nmsg.url = `${global.get('das_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('das_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n   'requests': msg.payload,\n   'upcount': 1,\n   'updelay': 20,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 2160,
        "wires": [
            [
                "862269e2.61419"
            ]
        ]
    },
    {
        "id": "28250d01.323baa",
        "type": "debug",
        "z": "28bf6c0d.495c44",
        "name": "requests/add",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.result",
        "targetType": "msg",
        "x": 1150,
        "y": 2160,
        "wires": []
    },
    {
        "id": "862269e2.61419",
        "type": "http request",
        "z": "28bf6c0d.495c44",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 870,
        "y": 2160,
        "wires": [
            [
                "dd768158.49a6f8"
            ]
        ]
    },
    {
        "id": "dd768158.49a6f8",
        "type": "json",
        "z": "28bf6c0d.495c44",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 2160,
        "wires": [
            [
                "28250d01.323baa"
            ]
        ]
    },
    {
        "id": "67ec3af6.b57e34",
        "type": "inject",
        "z": "28bf6c0d.495c44",
        "name": "Send rejoin request",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"REJOIN\"}]",
        "payloadType": "json",
        "x": 330,
        "y": 2140,
        "wires": [
            [
                "bfdfe728.ef41f"
            ]
        ]
    },
    {
        "id": "be7cbcab.3c958",
        "type": "inject",
        "z": "28bf6c0d.495c44",
        "name": "Update all info from modem",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"GETINFO\",\"param\":[\"appstatus\",\"uptime\",\"signal\",\"session\",\"voltage\",\"interval\",\"rxtime\",\"firmware\",\"region\",\"temp\",\"joineui\",\"chipeui\",\"adrmode\",\"charge\",\"status\",\"rstcount\",\"deveui\"]}]",
        "payloadType": "json",
        "x": 360,
        "y": 2180,
        "wires": [
            [
                "bfdfe728.ef41f"
            ]
        ]
    },
    {
        "id": "dc932c1e.e8c5b",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "",
        "links": [
            "702d87fb.267ae8",
            "6373b4e9.65af34"
        ],
        "x": 715,
        "y": 540,
        "wires": []
    },
    {
        "id": "702d87fb.267ae8",
        "type": "link in",
        "z": "28bf6c0d.495c44",
        "name": "To DAS - Joining",
        "links": [
            "dc932c1e.e8c5b",
            "18411880.333928",
            "22234073.4b00b8"
        ],
        "x": 255,
        "y": 1000,
        "wires": [
            [
                "641f0edd.47bd9"
            ]
        ]
    },
    {
        "id": "641f0edd.47bd9",
        "type": "function",
        "z": "28bf6c0d.495c44",
        "name": "Set url and credentials",
        "func": "var api = 'api/v1/device/send';\nmsg.method = 'post';\n\nmsg.url = `${global.get('das_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('das_token')};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 1000,
        "wires": [
            [
                "42553406.e0f604"
            ]
        ]
    },
    {
        "id": "f4667960.6eae88",
        "type": "loracloud-utils-connectors-ttn-v2-in",
        "z": "28bf6c0d.495c44",
        "name": "",
        "port": "199",
        "x": 530,
        "y": 520,
        "wires": [
            [
                "d3b81ad0.67c19"
            ],
            [
                "dc932c1e.e8c5b"
            ]
        ]
    },
    {
        "id": "203039c4.146dce",
        "type": "mqtt in",
        "z": "28bf6c0d.495c44",
        "name": "TTN v2 - joinReq",
        "topic": "+/devices/+/events/activations",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 320,
        "y": 580,
        "wires": [
            [
                "f4667960.6eae88"
            ]
        ]
    },
    {
        "id": "be3725f6.f53fb",
        "type": "mqtt in",
        "z": "28bf6c0d.495c44",
        "name": "TTN v3 - Uplinks",
        "topic": "v3/+/devices/+/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 320,
        "y": 720,
        "wires": [
            [
                "3db13431.a73c8c"
            ]
        ]
    },
    {
        "id": "3db13431.a73c8c",
        "type": "loracloud-utils-connectors-ttn-v3-in",
        "z": "28bf6c0d.495c44",
        "name": "",
        "port": "199",
        "x": 530,
        "y": 720,
        "wires": [
            [
                "7e0c2420.0adbd4"
            ],
            [
                "18411880.333928"
            ]
        ]
    },
    {
        "id": "7e0c2420.0adbd4",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "",
        "links": [
            "a7a151f7.ab3b18",
            "223db848.b85b"
        ],
        "x": 715,
        "y": 700,
        "wires": []
    },
    {
        "id": "18411880.333928",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "",
        "links": [
            "702d87fb.267ae8"
        ],
        "x": 715,
        "y": 740,
        "wires": []
    },
    {
        "id": "2b4baeda.d2da4a",
        "type": "mqtt in",
        "z": "28bf6c0d.495c44",
        "name": "TTN v3 - joinReq",
        "topic": "v3/+/devices/+/join",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 320,
        "y": 780,
        "wires": [
            [
                "3db13431.a73c8c"
            ]
        ]
    },
    {
        "id": "53de2653.34517",
        "type": "ui_text",
        "z": "28bf6c0d.495c44",
        "group": "80204734.dbb678",
        "order": 1,
        "width": "6",
        "height": "4",
        "name": "Upload text widget",
        "label": "File upload:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 690,
        "y": 1744,
        "wires": []
    },
    {
        "id": "f31acd20.e00168",
        "type": "ui_template",
        "z": "28bf6c0d.495c44",
        "group": "80204734.dbb678",
        "name": "Image widget",
        "order": 1,
        "width": "6",
        "height": "11",
        "format": "<p class=\"label nr-dashboard-chart-title ng-binding nr-dashboard-chart-titlel\">File upload PNG:</p><br />\n&nbsp;<br />\n<img width=\"100%\" height=\"100%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 830,
        "y": 1804,
        "wires": [
            []
        ]
    },
    {
        "id": "67302a97.ee9fbc",
        "type": "function",
        "z": "28bf6c0d.495c44",
        "name": "Format image data",
        "func": "msg.payload = new Buffer.from(msg.payload.data, \"hex\");\nmsg.payload = msg.payload.toString(\"base64\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 1804,
        "wires": [
            [
                "f31acd20.e00168"
            ]
        ]
    },
    {
        "id": "5a51fc9.f270a04",
        "type": "inject",
        "z": "28bf6c0d.495c44",
        "name": "devEuis",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "[\"00-00-00-00-00-00-00-00\"]",
        "payloadType": "json",
        "x": 320,
        "y": 140,
        "wires": [
            [
                "4b60e741.b96c4"
            ]
        ]
    },
    {
        "id": "4b60e741.b96c4",
        "type": "function",
        "z": "28bf6c0d.495c44",
        "name": "Set deveuis",
        "func": "global.set('deveuis', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d27bfcbe.28b4",
        "type": "inject",
        "z": "28bf6c0d.495c44",
        "name": "Clear requests",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 2280,
        "wires": [
            [
                "27b25557.2cdbba"
            ]
        ]
    },
    {
        "id": "27b25557.2cdbba",
        "type": "function",
        "z": "28bf6c0d.495c44",
        "name": "/api/v1/requests/clear",
        "func": "var api = 'api/v1/requests/clear';\nmsg.method = 'post';\n\nmsg.url = `${global.get('das_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('das_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 2280,
        "wires": [
            [
                "6b2d532a.a7c2a4"
            ]
        ]
    },
    {
        "id": "6b2d532a.a7c2a4",
        "type": "http request",
        "z": "28bf6c0d.495c44",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 870,
        "y": 2280,
        "wires": [
            [
                "9e08e8dd.db515"
            ]
        ]
    },
    {
        "id": "9e08e8dd.db515",
        "type": "json",
        "z": "28bf6c0d.495c44",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 2280,
        "wires": [
            [
                "954a0849.757e18"
            ]
        ]
    },
    {
        "id": "954a0849.757e18",
        "type": "debug",
        "z": "28bf6c0d.495c44",
        "name": "requests/add",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.result",
        "targetType": "msg",
        "x": 1150,
        "y": 2280,
        "wires": []
    },
    {
        "id": "4668fd90.da4574",
        "type": "template",
        "z": "28bf6c0d.495c44",
        "name": "Format raw data",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Session: #{{payload.sctr}}<br \\>\nPort: {{payload.port}}<br \\>\nData: {{payload.data}}<br \\>",
        "output": "str",
        "x": 380,
        "y": 1744,
        "wires": [
            [
                "53de2653.34517"
            ]
        ]
    },
    {
        "id": "4de5c4c9.0c4fdc",
        "type": "link in",
        "z": "28bf6c0d.495c44",
        "name": "To file display",
        "links": [
            "3e5c2c48.cc6094"
        ],
        "x": 255,
        "y": 1744,
        "wires": [
            [
                "433b882e.bfffb",
                "4668fd90.da4574",
                "b00dc5b.1d36538"
            ]
        ]
    },
    {
        "id": "3e5c2c48.cc6094",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "File from das",
        "links": [
            "4de5c4c9.0c4fdc"
        ],
        "x": 535,
        "y": 1120,
        "wires": []
    },
    {
        "id": "b00dc5b.1d36538",
        "type": "switch",
        "z": "28bf6c0d.495c44",
        "name": "Select file upload port",
        "property": "payload.port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "25",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 1804,
        "wires": [
            [
                "67302a97.ee9fbc"
            ]
        ]
    },
    {
        "id": "adcd5742.3f9868",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "Downlink from DAS",
        "links": [
            "d2454722.b78f4"
        ],
        "x": 535,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d2454722.b78f4",
        "type": "link in",
        "z": "28bf6c0d.495c44",
        "name": "To LNS downlink",
        "links": [
            "adcd5742.3f9868"
        ],
        "x": 255,
        "y": 1460,
        "wires": [
            [
                "89ef613f.175fa8",
                "cb99817d.ee0308"
            ]
        ]
    },
    {
        "id": "88e1cb72.4ec32",
        "type": "comment",
        "z": "28bf6c0d.495c44",
        "name": "_________________________      Downlink management      _________________________",
        "info": "",
        "x": 680,
        "y": 1360,
        "wires": []
    },
    {
        "id": "22234073.4b00b8",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "",
        "links": [
            "702d87fb.267ae8",
            "6373b4e9.65af34"
        ],
        "x": 715,
        "y": 400,
        "wires": []
    },
    {
        "id": "5f96043f.4cc4fc",
        "type": "link out",
        "z": "28bf6c0d.495c44",
        "name": "Stream from DAS",
        "links": [
            "ba09e0bc.7116a"
        ],
        "x": 800,
        "y": 1160,
        "wires": []
    },
    {
        "id": "704638c.73f94c8",
        "type": "loracloud-utils-connectors-das-parser",
        "z": "28bf6c0d.495c44",
        "name": "",
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "11ccb824.956248"
            ],
            [
                "3e5c2c48.cc6094"
            ],
            [
                "247dd509.adc232",
                "5f96043f.4cc4fc"
            ],
            [
                "adcd5742.3f9868"
            ],
            [
                "e79f15ed.86765"
            ]
        ]
    },
    {
        "id": "89ef613f.175fa8",
        "type": "debug",
        "z": "28bf6c0d.495c44",
        "name": "DAS - Downlink",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 440,
        "y": 1500,
        "wires": []
    },
    {
        "id": "cb99817d.ee0308",
        "type": "loracloud-utils-connectors-downlink-generator",
        "z": "28bf6c0d.495c44",
        "name": "",
        "x": 460,
        "y": 1460,
        "wires": [
            [
                "9847046e.a50778",
                "1f5d6886.b66dc7"
            ]
        ]
    },
    {
        "id": "1f5d6886.b66dc7",
        "type": "debug",
        "z": "28bf6c0d.495c44",
        "name": "Downlink Generator output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1500,
        "wires": []
    },
    {
        "id": "80204734.dbb678",
        "type": "ui_group",
        "z": "",
        "name": "UG_Modem",
        "tab": "7eb003af.77a1c4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7eb003af.77a1c4",
        "type": "ui_tab",
        "z": "",
        "name": "UG Modem",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]
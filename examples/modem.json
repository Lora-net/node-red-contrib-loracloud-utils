[
    {
        "id": "2be8a40f.41839c",
        "type": "http request",
        "z": "c4dde5a6.b0b018",
        "name": "Query Modem & Geolocation Services",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 690,
        "y": 1060,
        "wires": [
            [
                "e707e508.8e4358"
            ]
        ]
    },
    {
        "id": "e707e508.8e4358",
        "type": "link out",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "links": [
            "81a95455.91251",
            "d824bdab.ba561"
        ],
        "x": 915,
        "y": 1060,
        "wires": []
    },
    {
        "id": "81a95455.91251",
        "type": "link in",
        "z": "c4dde5a6.b0b018",
        "name": "To Modem & Geolocation Services parser",
        "links": [
            "e707e508.8e4358"
        ],
        "x": 175,
        "y": 1220,
        "wires": [
            [
                "a27674e8.61fcc8"
            ]
        ]
    },
    {
        "id": "20b23739.38c328",
        "type": "comment",
        "z": "c4dde5a6.b0b018",
        "name": "_________________________      Device & Application Services      _________________________",
        "info": "",
        "x": 690,
        "y": 1000,
        "wires": []
    },
    {
        "id": "135050b5.d3bc67",
        "type": "comment",
        "z": "c4dde5a6.b0b018",
        "name": "_________________________      Network Server Connection      _________________________",
        "info": "",
        "x": 640,
        "y": 380,
        "wires": []
    },
    {
        "id": "adad6438.142d6",
        "type": "link out",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "links": [
            "a7a151f7.ab3b18",
            "dd0a8b98.effe48",
            "c350de83.3d1598"
        ],
        "x": 695,
        "y": 560,
        "wires": []
    },
    {
        "id": "b3ddbe9c.f689b",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Modem & Geolocation Services url",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 360,
        "y": 160,
        "wires": [
            [
                "e47fb3ae.8744"
            ]
        ]
    },
    {
        "id": "e47fb3ae.8744",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "Modem & Geolocation Services url",
        "func": "global.set('mgs_url', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "dd2c556c.c1123",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Modem & Geolocation Services server token",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "da2cc5ba.966b68"
            ]
        ]
    },
    {
        "id": "da2cc5ba.966b68",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "Modem & Geolocation Services server token",
        "func": "global.set('mgs_token', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "3c8b22f.65430de",
        "type": "comment",
        "z": "c4dde5a6.b0b018",
        "name": "License",
        "info": "The Clear BSD License\nCopyright Semtech Corporation 2022. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted (subject to the limitations in the disclaimer\nbelow) provided that the following conditions are met:\n * Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n * Neither the name of the Semtech corporation nor the\n   names of its contributors may be used to endorse or promote products\n   derived from this software without specific prior written permission.\n\nNO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY\nTHIS LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\nCONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT\nNOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL SEMTECH CORPORATION BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n",
        "x": 1110,
        "y": 80,
        "wires": []
    },
    {
        "id": "fdbe80e1.db2598",
        "type": "comment",
        "z": "c4dde5a6.b0b018",
        "name": "_________________________      Application example      _________________________",
        "info": "",
        "x": 660,
        "y": 1940,
        "wires": []
    },
    {
        "id": "dd0a8b98.effe48",
        "type": "link in",
        "z": "c4dde5a6.b0b018",
        "name": "To graph",
        "links": [
            "adad6438.142d6",
            "4ffefb56.6cd57c",
            "39ef899f.f3f1d6",
            "89380824.7e28a8",
            "b014715b.09feb"
        ],
        "x": 235,
        "y": 2004,
        "wires": [
            [
                "6fcacd33.d13244"
            ]
        ]
    },
    {
        "id": "6fcacd33.d13244",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "If port=102, extract temperature",
        "func": "if (msg.uplink.port == 102) {\n    msg.payload = (new Buffer.from(msg.payload, 'hex'))[0];\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 2004,
        "wires": [
            [
                "48d2348f.3c0acc"
            ]
        ]
    },
    {
        "id": "48d2348f.3c0acc",
        "type": "ui_chart",
        "z": "c4dde5a6.b0b018",
        "name": "Temperature widget",
        "group": "80204734.dbb678",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 680,
        "y": 2004,
        "wires": [
            []
        ]
    },
    {
        "id": "6fc1d474.c0be0c",
        "type": "mqtt in",
        "z": "c4dde5a6.b0b018",
        "name": "TTN v2 - Uplinks",
        "topic": "+/devices/+/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 300,
        "y": 580,
        "wires": [
            [
                "ee0f09a8.87dab8"
            ]
        ]
    },
    {
        "id": "dd8cd3f1.5393d8",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "Modem & Geolocation Services - Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 850,
        "y": 1300,
        "wires": []
    },
    {
        "id": "3289c228.2315f6",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "Modem & Geolocation Services - Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 850,
        "y": 1140,
        "wires": []
    },
    {
        "id": "6bd7980a.2bf358",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "Modem & Geolocation Services - Stream",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 860,
        "y": 1220,
        "wires": []
    },
    {
        "id": "3a7f1023.ca2fa",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "Modem & Geolocation Services - File",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 480,
        "y": 2060,
        "wires": []
    },
    {
        "id": "c7df7b21.8d83e8",
        "type": "mqtt out",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "",
        "x": 770,
        "y": 1720,
        "wires": []
    },
    {
        "id": "a2479cc4.2535a",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Get devices information from Modem & Geolocation Services",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 2380,
        "wires": [
            [
                "f095eafe.1d299"
            ]
        ]
    },
    {
        "id": "f095eafe.1d299",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "/api/v1/device/info",
        "func": "var api = 'api/v1/device/info';\nmsg.method = 'post';\n\nmsg.url = `${global.get('mgs_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('mgs_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 2380,
        "wires": [
            [
                "5bf56684.a39378"
            ]
        ]
    },
    {
        "id": "cd3fc113.6595d8",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "device/info",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1110,
        "y": 2380,
        "wires": []
    },
    {
        "id": "5bf56684.a39378",
        "type": "http request",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 830,
        "y": 2380,
        "wires": [
            [
                "179746dc.4bd339"
            ]
        ]
    },
    {
        "id": "179746dc.4bd339",
        "type": "json",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 2380,
        "wires": [
            [
                "cd3fc113.6595d8"
            ]
        ]
    },
    {
        "id": "fdbfec10.116ce8",
        "type": "comment",
        "z": "c4dde5a6.b0b018",
        "name": "_________________________      Direct API calls      _________________________",
        "info": "",
        "x": 640,
        "y": 2320,
        "wires": []
    },
    {
        "id": "80e3cbd3.004268",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Send reset request",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"RESET\",\"param\":3}]",
        "payloadType": "json",
        "x": 290,
        "y": 2440,
        "wires": [
            [
                "7b9a106b.828258"
            ]
        ]
    },
    {
        "id": "7b9a106b.828258",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "/api/v1/requests/set",
        "func": "var api = 'api/v1/requests/set';\nmsg.method = 'post';\n\nmsg.url = `${global.get('mgs_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('mgs_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n   'requests': msg.payload,\n   'upcount': 1,\n   'updelay': 20,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 2500,
        "wires": [
            [
                "3c5d4add.9dbabe"
            ]
        ]
    },
    {
        "id": "225f004a.0dad3",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "requests/add",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.result",
        "targetType": "msg",
        "x": 1110,
        "y": 2500,
        "wires": []
    },
    {
        "id": "3c5d4add.9dbabe",
        "type": "http request",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 830,
        "y": 2500,
        "wires": [
            [
                "7b185042.c1b158"
            ]
        ]
    },
    {
        "id": "7b185042.c1b158",
        "type": "json",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 2500,
        "wires": [
            [
                "225f004a.0dad3"
            ]
        ]
    },
    {
        "id": "cc1465ff.791df",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Send rejoin request",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"REJOIN\"}]",
        "payloadType": "json",
        "x": 290,
        "y": 2480,
        "wires": [
            [
                "7b9a106b.828258"
            ]
        ]
    },
    {
        "id": "30ac55ed.a74252",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Update all info from modem",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"GETINFO\",\"param\":[\"appstatus\",\"uptime\",\"signal\",\"session\",\"voltage\",\"interval\",\"rxtime\",\"firmware\",\"region\",\"temp\",\"joineui\",\"chipeui\",\"adrmode\",\"charge\",\"status\",\"rstcount\",\"deveui\"]}]",
        "payloadType": "json",
        "x": 320,
        "y": 2520,
        "wires": [
            [
                "7b9a106b.828258"
            ]
        ]
    },
    {
        "id": "6174b822.9d8af8",
        "type": "link out",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "links": [
            "298118e2.04edc",
            "6373b4e9.65af34"
        ],
        "x": 695,
        "y": 600,
        "wires": []
    },
    {
        "id": "298118e2.04edc",
        "type": "link in",
        "z": "c4dde5a6.b0b018",
        "name": "To Modem & Geolocation Services - Joining",
        "links": [
            "6174b822.9d8af8",
            "2301ca55.7c5a76"
        ],
        "x": 235,
        "y": 1060,
        "wires": [
            [
                "a958c997.386848"
            ]
        ]
    },
    {
        "id": "a958c997.386848",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "Set url and credentials",
        "func": "var api = 'api/v1/device/send';\nmsg.method = 'post';\n\nmsg.url = `${global.get('mgs_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('mgs_token')};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 1060,
        "wires": [
            [
                "2be8a40f.41839c"
            ]
        ]
    },
    {
        "id": "ee0f09a8.87dab8",
        "type": "loracloud-utils-connectors-ttn-v2-in",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "port": "199",
        "x": 510,
        "y": 580,
        "wires": [
            [
                "adad6438.142d6"
            ],
            [
                "6174b822.9d8af8"
            ]
        ]
    },
    {
        "id": "7a553dad.ab0504",
        "type": "mqtt in",
        "z": "c4dde5a6.b0b018",
        "name": "TTN v2 - joinReq",
        "topic": "+/devices/+/events/activations",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 300,
        "y": 640,
        "wires": [
            [
                "ee0f09a8.87dab8"
            ]
        ]
    },
    {
        "id": "bf5b1f56.6beda8",
        "type": "mqtt in",
        "z": "c4dde5a6.b0b018",
        "name": "TTN v3 - Uplinks",
        "topic": "v3/+/devices/+/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 300,
        "y": 780,
        "wires": [
            [
                "ec73d113.9488c8"
            ]
        ]
    },
    {
        "id": "ec73d113.9488c8",
        "type": "loracloud-utils-connectors-ttn-v3-in",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "port": "199",
        "x": 510,
        "y": 780,
        "wires": [
            [
                "89380824.7e28a8"
            ],
            [
                "2301ca55.7c5a76"
            ]
        ]
    },
    {
        "id": "89380824.7e28a8",
        "type": "link out",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "links": [
            "a7a151f7.ab3b18",
            "dd0a8b98.effe48"
        ],
        "x": 695,
        "y": 760,
        "wires": []
    },
    {
        "id": "2301ca55.7c5a76",
        "type": "link out",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "links": [
            "298118e2.04edc"
        ],
        "x": 695,
        "y": 800,
        "wires": []
    },
    {
        "id": "857ffe97.06b48",
        "type": "mqtt in",
        "z": "c4dde5a6.b0b018",
        "name": "TTN v3 - joinReq",
        "topic": "v3/+/devices/+/join",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 300,
        "y": 840,
        "wires": [
            [
                "ec73d113.9488c8"
            ]
        ]
    },
    {
        "id": "2e7d45a2.706612",
        "type": "ui_text",
        "z": "c4dde5a6.b0b018",
        "group": "80204734.dbb678",
        "order": 1,
        "width": "6",
        "height": "4",
        "name": "Upload text widget",
        "label": "File upload:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 670,
        "y": 2104,
        "wires": []
    },
    {
        "id": "ffc230ef.85b87",
        "type": "ui_template",
        "z": "c4dde5a6.b0b018",
        "group": "80204734.dbb678",
        "name": "Image widget",
        "order": 1,
        "width": "6",
        "height": "11",
        "format": "<p class=\"label nr-dashboard-chart-title ng-binding nr-dashboard-chart-titlel\">File upload PNG:</p><br />\n&nbsp;<br />\n<img width=\"100%\" height=\"100%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 810,
        "y": 2164,
        "wires": [
            []
        ]
    },
    {
        "id": "ffe5380d.976c8",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "Format image data",
        "func": "msg.payload = new Buffer.from(msg.payload.data, \"hex\");\nmsg.payload = msg.payload.toString(\"base64\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 610,
        "y": 2164,
        "wires": [
            [
                "ffc230ef.85b87"
            ]
        ]
    },
    {
        "id": "889fbdc9.1acab8",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "devEuis",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "[\"00-00-00-00-00-00-00-00\"]",
        "payloadType": "json",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "9331f9e6.016cc8"
            ]
        ]
    },
    {
        "id": "9331f9e6.016cc8",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "Set deveuis",
        "func": "global.set('deveuis', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e4e72d1c.0a4398",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Clear requests",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 2620,
        "wires": [
            [
                "1952ac4e.5308f4"
            ]
        ]
    },
    {
        "id": "1952ac4e.5308f4",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "/api/v1/requests/clear",
        "func": "var api = 'api/v1/requests/clear';\nmsg.method = 'post';\n\nmsg.url = `${global.get('mgs_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('mgs_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 2620,
        "wires": [
            [
                "a7693fd0.1c3c58"
            ]
        ]
    },
    {
        "id": "a7693fd0.1c3c58",
        "type": "http request",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 830,
        "y": 2620,
        "wires": [
            [
                "7655849c.c76364"
            ]
        ]
    },
    {
        "id": "7655849c.c76364",
        "type": "json",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 2620,
        "wires": [
            [
                "d898a019.bb99"
            ]
        ]
    },
    {
        "id": "d898a019.bb99",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "requests/add",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.result",
        "targetType": "msg",
        "x": 1110,
        "y": 2620,
        "wires": []
    },
    {
        "id": "97a9c01.8b4824",
        "type": "template",
        "z": "c4dde5a6.b0b018",
        "name": "Format raw data",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Session: #{{payload.sctr}}<br \\>\nPort: {{payload.port}}<br \\>\nData: {{payload.data}}<br \\>",
        "output": "str",
        "x": 360,
        "y": 2104,
        "wires": [
            [
                "2e7d45a2.706612"
            ]
        ]
    },
    {
        "id": "35f299aa.05d4de",
        "type": "link in",
        "z": "c4dde5a6.b0b018",
        "name": "To file display",
        "links": [
            "2dacf788.7e4c1"
        ],
        "x": 235,
        "y": 2104,
        "wires": [
            [
                "3a7f1023.ca2fa",
                "97a9c01.8b4824",
                "bded1421.8a9be8"
            ]
        ]
    },
    {
        "id": "2dacf788.7e4c1",
        "type": "link out",
        "z": "c4dde5a6.b0b018",
        "name": "File from Modem & Geolocation Services",
        "links": [
            "35f299aa.05d4de"
        ],
        "x": 675,
        "y": 1180,
        "wires": []
    },
    {
        "id": "bded1421.8a9be8",
        "type": "switch",
        "z": "c4dde5a6.b0b018",
        "name": "Select file upload port",
        "property": "payload.port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "25",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 2164,
        "wires": [
            [
                "ffe5380d.976c8"
            ]
        ]
    },
    {
        "id": "45b50578.4f0ca4",
        "type": "link out",
        "z": "c4dde5a6.b0b018",
        "name": "Downlink from Modem & Geolocation Services",
        "links": [
            "9a965c2d.593198"
        ],
        "x": 675,
        "y": 1260,
        "wires": []
    },
    {
        "id": "9a965c2d.593198",
        "type": "link in",
        "z": "c4dde5a6.b0b018",
        "name": "To network server downlink",
        "links": [
            "45b50578.4f0ca4",
            "350d103c.194fa"
        ],
        "x": 395,
        "y": 1720,
        "wires": [
            [
                "5d851eba.bae208",
                "6ddb37e.6847148"
            ]
        ]
    },
    {
        "id": "a70cbab.51feac8",
        "type": "comment",
        "z": "c4dde5a6.b0b018",
        "name": "_________________________      Downlink management      _________________________",
        "info": "",
        "x": 700,
        "y": 1480,
        "wires": []
    },
    {
        "id": "db4a9350.4220d",
        "type": "link out",
        "z": "c4dde5a6.b0b018",
        "name": "Stream from Modem & Geolocation Services",
        "links": [],
        "x": 1115,
        "y": 1220,
        "wires": []
    },
    {
        "id": "a27674e8.61fcc8",
        "type": "loracloud-utils-connectors-mgs-parser",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "x": 410,
        "y": 1220,
        "wires": [
            [
                "3289c228.2315f6"
            ],
            [
                "2dacf788.7e4c1"
            ],
            [
                "6bd7980a.2bf358",
                "db4a9350.4220d"
            ],
            [
                "45b50578.4f0ca4"
            ],
            [
                "dd8cd3f1.5393d8"
            ]
        ]
    },
    {
        "id": "5d851eba.bae208",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "Modem & Geolocation Services - Downlink",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 660,
        "y": 1760,
        "wires": []
    },
    {
        "id": "6ddb37e.6847148",
        "type": "loracloud-utils-connectors-downlink-generator",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "x": 600,
        "y": 1720,
        "wires": [
            [
                "c7df7b21.8d83e8",
                "d10eaf0.007095"
            ]
        ]
    },
    {
        "id": "d10eaf0.007095",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "Downlink Generator output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 1680,
        "wires": []
    },
    {
        "id": "be7f7fda.918cd",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "Update network server configuration storage",
        "func": "lns_configurations = global.get('lns_configurations') || {};\n\ndeveui = msg.uplink.devEui;\nlns_config = {\n    \"uplink\":msg.uplink,\n    \"topic\": msg.topic,\n};\nlns_configurations[deveui] = lns_config;\n\nglobal.set('lns_configurations', lns_configurations);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "d824bdab.ba561",
        "type": "link in",
        "z": "c4dde5a6.b0b018",
        "name": "To network server storage",
        "links": [
            "e707e508.8e4358"
        ],
        "x": 475,
        "y": 2760,
        "wires": [
            [
                "be7f7fda.918cd"
            ]
        ]
    },
    {
        "id": "2942afb2.5d8f28",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Read network server configuration",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 400,
        "y": 2800,
        "wires": [
            [
                "aabaf1e3.d85528"
            ]
        ]
    },
    {
        "id": "aabaf1e3.d85528",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "Read network server configuration storage",
        "func": "msg.payload = global.get('lns_configurations') || {};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 2800,
        "wires": [
            [
                "db9ed286.8ea9b"
            ]
        ]
    },
    {
        "id": "db9ed286.8ea9b",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "network server configurations",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 2800,
        "wires": []
    },
    {
        "id": "4385e087.c98b88",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Clear network server storage",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 410,
        "y": 2840,
        "wires": [
            [
                "ab6b4235.b179c8"
            ]
        ]
    },
    {
        "id": "ab6b4235.b179c8",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "Clear network server configuration storage",
        "func": "global.set('lns_configurations', {});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 2840,
        "wires": [
            []
        ]
    },
    {
        "id": "aa5c34fe.b2d038",
        "type": "comment",
        "z": "c4dde5a6.b0b018",
        "name": "_________________________      Network Server context      _________________________",
        "info": "",
        "x": 630,
        "y": 2700,
        "wires": []
    },
    {
        "id": "3c24bb40.3298dc",
        "type": "function",
        "z": "c4dde5a6.b0b018",
        "name": "Generate downlink message",
        "func": "deveuis = global.get('deveuis').map(raw => raw.replace(/-/g, \"\"));\nlns_configurations = global.get('lns_configurations') || {};\n\nconst all_out_msg = deveuis.map(deveui =>{\n    return {\n    \"payload\":{\n        \"payload\":msg.payload.payload,\n        \"port\": msg.payload.port,\n    },\n    \"uplink\":lns_configurations[deveui].uplink,\n    \"topic\":lns_configurations[deveui].topic,\n       }\n    }\n);\n\nreturn [all_out_msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 1560,
        "wires": [
            [
                "110bad72.5db24b",
                "350d103c.194fa"
            ]
        ]
    },
    {
        "id": "110bad72.5db24b",
        "type": "debug",
        "z": "c4dde5a6.b0b018",
        "name": "Generated downlink message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 1560,
        "wires": []
    },
    {
        "id": "350d103c.194fa",
        "type": "link out",
        "z": "c4dde5a6.b0b018",
        "name": "",
        "links": [
            "9a965c2d.593198"
        ],
        "x": 935,
        "y": 1560,
        "wires": []
    },
    {
        "id": "d5425cdb.7f47f",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Example of message to downlink",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"001122\",\"port\":2}",
        "payloadType": "json",
        "x": 290,
        "y": 1560,
        "wires": [
            [
                "3c24bb40.3298dc"
            ]
        ]
    },
    {
        "id": "b265a1d7.b803d",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Turn On LED",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"4F0101\",\"port\":151}",
        "payloadType": "json",
        "x": 350,
        "y": 1600,
        "wires": [
            [
                "3c24bb40.3298dc"
            ]
        ]
    },
    {
        "id": "4df2a7a6.157088",
        "type": "inject",
        "z": "c4dde5a6.b0b018",
        "name": "Turn Off LED",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"payload\":\"4F0100\",\"port\":151}",
        "payloadType": "json",
        "x": 350,
        "y": 1640,
        "wires": [
            [
                "3c24bb40.3298dc"
            ]
        ]
    },
    {
        "id": "80204734.dbb678",
        "type": "ui_group",
        "z": "",
        "name": "UG_Modem",
        "tab": "7eb003af.77a1c4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7eb003af.77a1c4",
        "type": "ui_tab",
        "z": "",
        "name": "UG Modem",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]

[
    {
        "id": "79f39eda.11f228",
        "type": "http request",
        "z": "f6543694.361d",
        "name": "Query DAS",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 450,
        "y": 1020,
        "wires": [
            [
                "c5c9c524.cfb09"
            ]
        ]
    },
    {
        "id": "c5c9c524.cfb09",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "",
        "links": [
            "39291b0f.c762e4"
        ],
        "x": 575,
        "y": 1020,
        "wires": []
    },
    {
        "id": "39291b0f.c762e4",
        "type": "link in",
        "z": "f6543694.361d",
        "name": "To DAS parser",
        "links": [
            "c5c9c524.cfb09",
            "799954a3.2e0324",
            "836f5ce7.066718",
            "8acf6b01.1232"
        ],
        "x": 95,
        "y": 1180,
        "wires": [
            [
                "67951b19.bcaac4"
            ]
        ]
    },
    {
        "id": "e14b34f3.22f7a",
        "type": "comment",
        "z": "f6543694.361d",
        "name": "_________________________      Device & Application Services      _________________________",
        "info": "",
        "x": 550,
        "y": 960,
        "wires": []
    },
    {
        "id": "2176bbfa.24f6e4",
        "type": "loracloud-utils-connectors-actility-in",
        "z": "f6543694.361d",
        "name": "",
        "port": "199",
        "x": 370,
        "y": 400,
        "wires": [
            [
                "1f5d4be.bbbacb4"
            ],
            [
                "d52fb588.efebe"
            ]
        ]
    },
    {
        "id": "c67286df.c82728",
        "type": "comment",
        "z": "f6543694.361d",
        "name": "_________________________      LNS Connexion      _________________________",
        "info": "",
        "x": 500,
        "y": 340,
        "wires": []
    },
    {
        "id": "992f9817.e2156",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "",
        "links": [
            "a7a151f7.ab3b18",
            "56421b39.21f2e4",
            "c350de83.3d1598"
        ],
        "x": 555,
        "y": 520,
        "wires": []
    },
    {
        "id": "62c8d3ba.eb3ca4",
        "type": "inject",
        "z": "f6543694.361d",
        "name": "DAS url",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "72af4b39.1ff244"
            ]
        ]
    },
    {
        "id": "72af4b39.1ff244",
        "type": "function",
        "z": "f6543694.361d",
        "name": "DAS url",
        "func": "global.set('das_url', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "ecc4bdd9.c2a82",
        "type": "inject",
        "z": "f6543694.361d",
        "name": "DAS server token",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "93e307c0.5b8ad8"
            ]
        ]
    },
    {
        "id": "93e307c0.5b8ad8",
        "type": "function",
        "z": "f6543694.361d",
        "name": "DAS server token",
        "func": "global.set('das_token', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b1603b68.c131a",
        "type": "comment",
        "z": "f6543694.361d",
        "name": "_________________________      CONFIG      _________________________",
        "info": "Demo AS code v1.2.0\n\n---\n\nv1.2.0\nAdd Downlink Generator block\nChange DAS API usage from /uplink/send to /device/send\n\nv1.1.0\nUse Wi-Fi DAS\n\nv1.0.1\nUpdate license\n\nv1.0.0\nInital release",
        "x": 480,
        "y": 40,
        "wires": []
    },
    {
        "id": "be96dc7e.7cf5e8",
        "type": "comment",
        "z": "f6543694.361d",
        "name": "License",
        "info": "Revised BSD License\nCopyright Semtech Corporation 2020. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n* Neither the name of the Semtech corporation nor the\n  names of its contributors may be used to endorse or promote products\n  derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL SEMTECH S.A. BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "x": 970,
        "y": 40,
        "wires": []
    },
    {
        "id": "53bebd7e.b5271c",
        "type": "comment",
        "z": "f6543694.361d",
        "name": "_________________________      Application example      _________________________",
        "info": "",
        "x": 520,
        "y": 1600,
        "wires": []
    },
    {
        "id": "56421b39.21f2e4",
        "type": "link in",
        "z": "f6543694.361d",
        "name": "To graph",
        "links": [
            "992f9817.e2156",
            "4ffefb56.6cd57c",
            "1f5d4be.bbbacb4",
            "39ef899f.f3f1d6",
            "39fc53ae.cdfd4c",
            "b014715b.09feb"
        ],
        "x": 95,
        "y": 1664,
        "wires": [
            [
                "4c425f5f.de542"
            ]
        ]
    },
    {
        "id": "4c425f5f.de542",
        "type": "function",
        "z": "f6543694.361d",
        "name": "If port=102, extract temperature",
        "func": "if (msg.uplink.port == 102) {\n    msg.payload = (new Buffer.from(msg.payload, 'hex'))[0];\n    return msg;\n}\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 1664,
        "wires": [
            [
                "50d67c31.acd76c"
            ]
        ]
    },
    {
        "id": "50d67c31.acd76c",
        "type": "ui_chart",
        "z": "f6543694.361d",
        "name": "Temperature widget",
        "group": "80204734.dbb678",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "Temperature",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 540,
        "y": 1664,
        "wires": [
            []
        ]
    },
    {
        "id": "b4ee80ca.42d948",
        "type": "mqtt in",
        "z": "f6543694.361d",
        "name": "TTN v2 - Uplinks",
        "topic": "+/devices/+/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 160,
        "y": 540,
        "wires": [
            [
                "f203f1d8.b2d86"
            ]
        ]
    },
    {
        "id": "d93c8c8b.08113",
        "type": "debug",
        "z": "f6543694.361d",
        "name": "DAS - Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 430,
        "y": 1260,
        "wires": []
    },
    {
        "id": "872537bb.00eb58",
        "type": "debug",
        "z": "f6543694.361d",
        "name": "DAS - Data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 430,
        "y": 1100,
        "wires": []
    },
    {
        "id": "69b4f7cc.98922",
        "type": "debug",
        "z": "f6543694.361d",
        "name": "DAS - Stream",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 440,
        "y": 1180,
        "wires": []
    },
    {
        "id": "54379d10.6bb734",
        "type": "debug",
        "z": "f6543694.361d",
        "name": "DAS - File",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 210,
        "y": 1724,
        "wires": []
    },
    {
        "id": "8e492b74.0ed8b8",
        "type": "mqtt out",
        "z": "f6543694.361d",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "226b3f85.9ffc2",
        "x": 470,
        "y": 1480,
        "wires": []
    },
    {
        "id": "d4189d74.7ec87",
        "type": "mqtt in",
        "z": "f6543694.361d",
        "name": "Actility",
        "topic": "TPX/+/+/UL",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "2176bbfa.24f6e4"
            ]
        ]
    },
    {
        "id": "1f5d4be.bbbacb4",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "",
        "links": [
            "a7a151f7.ab3b18",
            "56421b39.21f2e4",
            "c350de83.3d1598"
        ],
        "x": 555,
        "y": 380,
        "wires": []
    },
    {
        "id": "720de622.0450e",
        "type": "inject",
        "z": "f6543694.361d",
        "name": "Get devices information from DAS",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 2060,
        "wires": [
            [
                "fab5b68.e330a48"
            ]
        ]
    },
    {
        "id": "fab5b68.e330a48",
        "type": "function",
        "z": "f6543694.361d",
        "name": "/api/v1/device/info",
        "func": "var api = 'api/v1/device/info';\nmsg.method = 'post';\n\nmsg.url = `${global.get('das_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('das_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 2060,
        "wires": [
            [
                "eb75758a.5f1ab8"
            ]
        ]
    },
    {
        "id": "2fe95949.8fca7e",
        "type": "debug",
        "z": "f6543694.361d",
        "name": "device/info",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 990,
        "y": 2060,
        "wires": []
    },
    {
        "id": "eb75758a.5f1ab8",
        "type": "http request",
        "z": "f6543694.361d",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 710,
        "y": 2060,
        "wires": [
            [
                "4405279f.92b298"
            ]
        ]
    },
    {
        "id": "4405279f.92b298",
        "type": "json",
        "z": "f6543694.361d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 850,
        "y": 2060,
        "wires": [
            [
                "2fe95949.8fca7e"
            ]
        ]
    },
    {
        "id": "12f24925.8f544f",
        "type": "comment",
        "z": "f6543694.361d",
        "name": "_________________________      Direct API calls      _________________________",
        "info": "",
        "x": 520,
        "y": 2000,
        "wires": []
    },
    {
        "id": "1c9e5b86.513d6c",
        "type": "inject",
        "z": "f6543694.361d",
        "name": "Send reset request",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"RESET\",\"param\":3}]",
        "payloadType": "json",
        "x": 170,
        "y": 2120,
        "wires": [
            [
                "7b0abd14.823524"
            ]
        ]
    },
    {
        "id": "7b0abd14.823524",
        "type": "function",
        "z": "f6543694.361d",
        "name": "/api/v1/requests/set",
        "func": "var api = 'api/v1/requests/set';\nmsg.method = 'post';\n\nmsg.url = `${global.get('das_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('das_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n   'requests': msg.payload,\n   'upcount': 1,\n   'updelay': 20,\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 2180,
        "wires": [
            [
                "9d364d82.a9d228"
            ]
        ]
    },
    {
        "id": "a0510227.56c31",
        "type": "debug",
        "z": "f6543694.361d",
        "name": "requests/add",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.result",
        "targetType": "msg",
        "x": 990,
        "y": 2180,
        "wires": []
    },
    {
        "id": "9d364d82.a9d228",
        "type": "http request",
        "z": "f6543694.361d",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 710,
        "y": 2180,
        "wires": [
            [
                "f0378a36.348548"
            ]
        ]
    },
    {
        "id": "f0378a36.348548",
        "type": "json",
        "z": "f6543694.361d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 850,
        "y": 2180,
        "wires": [
            [
                "a0510227.56c31"
            ]
        ]
    },
    {
        "id": "909b22b3.7029c8",
        "type": "inject",
        "z": "f6543694.361d",
        "name": "Send rejoin request",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"REJOIN\"}]",
        "payloadType": "json",
        "x": 170,
        "y": 2160,
        "wires": [
            [
                "7b0abd14.823524"
            ]
        ]
    },
    {
        "id": "42eb980c.55af7",
        "type": "inject",
        "z": "f6543694.361d",
        "name": "Update all info from modem",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"type\":\"GETINFO\",\"param\":[\"appstatus\",\"uptime\",\"signal\",\"session\",\"voltage\",\"interval\",\"rxtime\",\"firmware\",\"region\",\"temp\",\"joineui\",\"chipeui\",\"adrmode\",\"charge\",\"status\",\"rstcount\",\"deveui\"]}]",
        "payloadType": "json",
        "x": 200,
        "y": 2200,
        "wires": [
            [
                "7b0abd14.823524"
            ]
        ]
    },
    {
        "id": "5b3661ca.d35b1",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "",
        "links": [
            "1b9f9a31.f2b7ee",
            "6373b4e9.65af34"
        ],
        "x": 555,
        "y": 560,
        "wires": []
    },
    {
        "id": "1b9f9a31.f2b7ee",
        "type": "link in",
        "z": "f6543694.361d",
        "name": "To DAS - Joining",
        "links": [
            "5b3661ca.d35b1",
            "a0663f5a.00809",
            "d52fb588.efebe"
        ],
        "x": 95,
        "y": 1020,
        "wires": [
            [
                "e39f84a9.4a7848"
            ]
        ]
    },
    {
        "id": "e39f84a9.4a7848",
        "type": "function",
        "z": "f6543694.361d",
        "name": "Set url and credentials",
        "func": "var api = 'api/v1/device/send';\nmsg.method = 'post';\n\nmsg.url = `${global.get('das_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('das_token')};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 1020,
        "wires": [
            [
                "79f39eda.11f228"
            ]
        ]
    },
    {
        "id": "f203f1d8.b2d86",
        "type": "loracloud-utils-connectors-ttn-v2-in",
        "z": "f6543694.361d",
        "name": "",
        "port": "199",
        "x": 370,
        "y": 540,
        "wires": [
            [
                "992f9817.e2156"
            ],
            [
                "5b3661ca.d35b1"
            ]
        ]
    },
    {
        "id": "b93b35a8.73f368",
        "type": "mqtt in",
        "z": "f6543694.361d",
        "name": "TTN v2 - joinReq",
        "topic": "+/devices/+/events/activations",
        "qos": "2",
        "datatype": "auto",
        "broker": "",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "f203f1d8.b2d86"
            ]
        ]
    },
    {
        "id": "bd08e3c2.987a18",
        "type": "mqtt in",
        "z": "f6543694.361d",
        "name": "TTN v3 - Uplinks",
        "topic": "v3/+/devices/+/up",
        "qos": "2",
        "datatype": "auto",
        "broker": "226b3f85.9ffc2",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "1765a517.020dfb"
            ]
        ]
    },
    {
        "id": "1765a517.020dfb",
        "type": "loracloud-utils-connectors-ttn-v3-in",
        "z": "f6543694.361d",
        "name": "",
        "port": "199",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "39fc53ae.cdfd4c"
            ],
            [
                "a0663f5a.00809"
            ]
        ]
    },
    {
        "id": "39fc53ae.cdfd4c",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "",
        "links": [
            "a7a151f7.ab3b18",
            "56421b39.21f2e4"
        ],
        "x": 555,
        "y": 720,
        "wires": []
    },
    {
        "id": "a0663f5a.00809",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "",
        "links": [
            "1b9f9a31.f2b7ee"
        ],
        "x": 555,
        "y": 760,
        "wires": []
    },
    {
        "id": "4c370238.1e635c",
        "type": "mqtt in",
        "z": "f6543694.361d",
        "name": "TTN v3 - joinReq",
        "topic": "v3/+/devices/+/join",
        "qos": "2",
        "datatype": "auto",
        "broker": "226b3f85.9ffc2",
        "x": 160,
        "y": 800,
        "wires": [
            [
                "1765a517.020dfb"
            ]
        ]
    },
    {
        "id": "78461282.560e6c",
        "type": "ui_text",
        "z": "f6543694.361d",
        "group": "80204734.dbb678",
        "order": 1,
        "width": "6",
        "height": "4",
        "name": "Upload text widget",
        "label": "File upload:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 530,
        "y": 1764,
        "wires": []
    },
    {
        "id": "4fcd0c92.e862d4",
        "type": "ui_template",
        "z": "f6543694.361d",
        "group": "80204734.dbb678",
        "name": "Image widget",
        "order": 1,
        "width": "6",
        "height": "11",
        "format": "<p class=\"label nr-dashboard-chart-title ng-binding nr-dashboard-chart-titlel\">File upload PNG:</p><br />\n&nbsp;<br />\n<img width=\"100%\" height=\"100%\" alt=\"Image not found\" src=\"data:image/png;base64,{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 670,
        "y": 1824,
        "wires": [
            []
        ]
    },
    {
        "id": "168556cc.bb72d1",
        "type": "function",
        "z": "f6543694.361d",
        "name": "Format image data",
        "func": "msg.payload = new Buffer.from(msg.payload.data, \"hex\");\nmsg.payload = msg.payload.toString(\"base64\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 1824,
        "wires": [
            [
                "4fcd0c92.e862d4"
            ]
        ]
    },
    {
        "id": "e1b59d4.b3f4ae",
        "type": "inject",
        "z": "f6543694.361d",
        "name": "devEuis",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "[\"00-00-00-00-00-00-00-00\"]",
        "payloadType": "json",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "4c63dd6a.2e364c"
            ]
        ]
    },
    {
        "id": "4c63dd6a.2e364c",
        "type": "function",
        "z": "f6543694.361d",
        "name": "Set deveuis",
        "func": "global.set('deveuis', msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "12760a9b.95eeed",
        "type": "inject",
        "z": "f6543694.361d",
        "name": "Clear requests",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 2300,
        "wires": [
            [
                "59f50593.893e74"
            ]
        ]
    },
    {
        "id": "59f50593.893e74",
        "type": "function",
        "z": "f6543694.361d",
        "name": "/api/v1/requests/clear",
        "func": "var api = 'api/v1/requests/clear';\nmsg.method = 'post';\n\nmsg.url = `${global.get('das_url')}/${api}`;\nmsg.headers = {'Authorization': global.get('das_token')};\n\nmsg.payload = {\n   'deveuis':  global.get('deveuis'),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 2300,
        "wires": [
            [
                "ea4ca8fc.63dc98"
            ]
        ]
    },
    {
        "id": "ea4ca8fc.63dc98",
        "type": "http request",
        "z": "f6543694.361d",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 710,
        "y": 2300,
        "wires": [
            [
                "d7fce94d.ddd9e"
            ]
        ]
    },
    {
        "id": "d7fce94d.ddd9e",
        "type": "json",
        "z": "f6543694.361d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 850,
        "y": 2300,
        "wires": [
            [
                "71c68a83.33d52c"
            ]
        ]
    },
    {
        "id": "71c68a83.33d52c",
        "type": "debug",
        "z": "f6543694.361d",
        "name": "requests/add",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.result",
        "targetType": "msg",
        "x": 990,
        "y": 2300,
        "wires": []
    },
    {
        "id": "30245733.1350a",
        "type": "template",
        "z": "f6543694.361d",
        "name": "Format raw data",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Session: #{{payload.sctr}}<br \\>\nPort: {{payload.port}}<br \\>\nData: {{payload.data}}<br \\>",
        "output": "str",
        "x": 220,
        "y": 1764,
        "wires": [
            [
                "78461282.560e6c"
            ]
        ]
    },
    {
        "id": "7df90084.64e2b",
        "type": "link in",
        "z": "f6543694.361d",
        "name": "To file display",
        "links": [
            "b39aaca8.c264e8"
        ],
        "x": 95,
        "y": 1764,
        "wires": [
            [
                "54379d10.6bb734",
                "30245733.1350a",
                "78c271c7.497a6"
            ]
        ]
    },
    {
        "id": "b39aaca8.c264e8",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "File from das",
        "links": [
            "7df90084.64e2b"
        ],
        "x": 375,
        "y": 1140,
        "wires": []
    },
    {
        "id": "78c271c7.497a6",
        "type": "switch",
        "z": "f6543694.361d",
        "name": "Select file upload port",
        "property": "payload.port",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "25",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 1824,
        "wires": [
            [
                "168556cc.bb72d1"
            ]
        ]
    },
    {
        "id": "500db670.062d68",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "Downlink from DAS",
        "links": [
            "347aa361.87f5a4"
        ],
        "x": 375,
        "y": 1220,
        "wires": []
    },
    {
        "id": "347aa361.87f5a4",
        "type": "link in",
        "z": "f6543694.361d",
        "name": "To LNS downlink",
        "links": [
            "500db670.062d68"
        ],
        "x": 95,
        "y": 1480,
        "wires": [
            [
                "33d19060.bdaae8",
                "5a61cd98.d94e1c"
            ]
        ]
    },
    {
        "id": "bbc05cbe.3c06a8",
        "type": "comment",
        "z": "f6543694.361d",
        "name": "_________________________      Downlink management      _________________________",
        "info": "",
        "x": 520,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d52fb588.efebe",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "",
        "links": [
            "1b9f9a31.f2b7ee",
            "6373b4e9.65af34"
        ],
        "x": 555,
        "y": 420,
        "wires": []
    },
    {
        "id": "fc96b394.424d08",
        "type": "link out",
        "z": "f6543694.361d",
        "name": "Stream from DAS",
        "links": [
            "ba09e0bc.7116a"
        ],
        "x": 640,
        "y": 1180,
        "wires": []
    },
    {
        "id": "67951b19.bcaac4",
        "type": "loracloud-utils-connectors-das-parser",
        "z": "f6543694.361d",
        "name": "",
        "x": 230,
        "y": 1180,
        "wires": [
            [
                "872537bb.00eb58"
            ],
            [
                "b39aaca8.c264e8"
            ],
            [
                "69b4f7cc.98922",
                "fc96b394.424d08"
            ],
            [
                "500db670.062d68"
            ],
            [
                "d93c8c8b.08113"
            ]
        ]
    },
    {
        "id": "33d19060.bdaae8",
        "type": "debug",
        "z": "f6543694.361d",
        "name": "DAS - Downlink",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 280,
        "y": 1520,
        "wires": []
    },
    {
        "id": "5a61cd98.d94e1c",
        "type": "loracloud-utils-connectors-downlink-generator",
        "z": "f6543694.361d",
        "name": "",
        "x": 300,
        "y": 1480,
        "wires": [
            [
                "8e492b74.0ed8b8",
                "94e4c86a.0d8308"
            ]
        ]
    },
    {
        "id": "94e4c86a.0d8308",
        "type": "debug",
        "z": "f6543694.361d",
        "name": "Downlink Generator output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1520,
        "wires": []
    },
    {
        "id": "80204734.dbb678",
        "type": "ui_group",
        "z": "",
        "name": "UG_Modem",
        "tab": "7eb003af.77a1c4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "226b3f85.9ffc2",
        "type": "mqtt-broker",
        "z": "",
        "name": "semtech_eu1",
        "broker": "eu1.cloud.thethings.industries",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "7eb003af.77a1c4",
        "type": "ui_tab",
        "z": "",
        "name": "UG Modem",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]